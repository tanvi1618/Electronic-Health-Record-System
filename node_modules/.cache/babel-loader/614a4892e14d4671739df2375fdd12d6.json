{"ast":null,"code":"/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\"use strict\";\n\nvar core = require('web3-core');\nvar Method = require('web3-core-method');\nvar utils = require('web3-utils');\nvar Net = require('web3-net');\nvar formatters = require('web3-core-helpers').formatters;\nvar Personal = function Personal() {\n  var _this = this;\n  // sets _requestmanager\n  core.packageInit(this, arguments);\n  this.net = new Net(this);\n  var defaultAccount = null;\n  var defaultBlock = 'latest';\n  Object.defineProperty(this, 'defaultAccount', {\n    get: function () {\n      return defaultAccount;\n    },\n    set: function (val) {\n      if (val) {\n        defaultAccount = utils.toChecksumAddress(formatters.inputAddressFormatter(val));\n      }\n      // update defaultBlock\n      methods.forEach(function (method) {\n        method.defaultAccount = defaultAccount;\n      });\n      return val;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, 'defaultBlock', {\n    get: function () {\n      return defaultBlock;\n    },\n    set: function (val) {\n      defaultBlock = val;\n      // update defaultBlock\n      methods.forEach(function (method) {\n        method.defaultBlock = defaultBlock;\n      });\n      return val;\n    },\n    enumerable: true\n  });\n  var methods = [new Method({\n    name: 'getAccounts',\n    call: 'personal_listAccounts',\n    params: 0,\n    outputFormatter: utils.toChecksumAddress\n  }), new Method({\n    name: 'newAccount',\n    call: 'personal_newAccount',\n    params: 1,\n    inputFormatter: [null],\n    outputFormatter: utils.toChecksumAddress\n  }), new Method({\n    name: 'unlockAccount',\n    call: 'personal_unlockAccount',\n    params: 3,\n    inputFormatter: [formatters.inputAddressFormatter, null, null]\n  }), new Method({\n    name: 'lockAccount',\n    call: 'personal_lockAccount',\n    params: 1,\n    inputFormatter: [formatters.inputAddressFormatter]\n  }), new Method({\n    name: 'importRawKey',\n    call: 'personal_importRawKey',\n    params: 2\n  }), new Method({\n    name: 'sendTransaction',\n    call: 'personal_sendTransaction',\n    params: 2,\n    inputFormatter: [formatters.inputTransactionFormatter, null]\n  }), new Method({\n    name: 'signTransaction',\n    call: 'personal_signTransaction',\n    params: 2,\n    inputFormatter: [formatters.inputTransactionFormatter, null]\n  }), new Method({\n    name: 'sign',\n    call: 'personal_sign',\n    params: 3,\n    inputFormatter: [formatters.inputSignFormatter, formatters.inputAddressFormatter, null]\n  }), new Method({\n    name: 'ecRecover',\n    call: 'personal_ecRecover',\n    params: 2,\n    inputFormatter: [formatters.inputSignFormatter, null]\n  })];\n  methods.forEach(function (method) {\n    method.attachToObject(_this);\n    method.setRequestManager(_this._requestManager);\n    method.defaultBlock = _this.defaultBlock;\n    method.defaultAccount = _this.defaultAccount;\n  });\n};\ncore.addProviders(Personal);\nmodule.exports = Personal;","map":{"version":3,"names":["core","require","Method","utils","Net","formatters","Personal","_this","packageInit","arguments","net","defaultAccount","defaultBlock","Object","defineProperty","get","set","val","toChecksumAddress","inputAddressFormatter","methods","forEach","method","enumerable","name","call","params","outputFormatter","inputFormatter","inputTransactionFormatter","inputSignFormatter","attachToObject","setRequestManager","_requestManager","addProviders","module","exports"],"sources":["/Users/tanvisangale/Documents/Project2/Blockchain-Healthcare/node_modules/web3-eth-personal/lib/index.js"],"sourcesContent":["/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\"use strict\";\nvar core = require('web3-core');\nvar Method = require('web3-core-method');\nvar utils = require('web3-utils');\nvar Net = require('web3-net');\nvar formatters = require('web3-core-helpers').formatters;\nvar Personal = function Personal() {\n    var _this = this;\n    // sets _requestmanager\n    core.packageInit(this, arguments);\n    this.net = new Net(this);\n    var defaultAccount = null;\n    var defaultBlock = 'latest';\n    Object.defineProperty(this, 'defaultAccount', {\n        get: function () {\n            return defaultAccount;\n        },\n        set: function (val) {\n            if (val) {\n                defaultAccount = utils.toChecksumAddress(formatters.inputAddressFormatter(val));\n            }\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.defaultAccount = defaultAccount;\n            });\n            return val;\n        },\n        enumerable: true\n    });\n    Object.defineProperty(this, 'defaultBlock', {\n        get: function () {\n            return defaultBlock;\n        },\n        set: function (val) {\n            defaultBlock = val;\n            // update defaultBlock\n            methods.forEach(function (method) {\n                method.defaultBlock = defaultBlock;\n            });\n            return val;\n        },\n        enumerable: true\n    });\n    var methods = [\n        new Method({\n            name: 'getAccounts',\n            call: 'personal_listAccounts',\n            params: 0,\n            outputFormatter: utils.toChecksumAddress\n        }),\n        new Method({\n            name: 'newAccount',\n            call: 'personal_newAccount',\n            params: 1,\n            inputFormatter: [null],\n            outputFormatter: utils.toChecksumAddress\n        }),\n        new Method({\n            name: 'unlockAccount',\n            call: 'personal_unlockAccount',\n            params: 3,\n            inputFormatter: [formatters.inputAddressFormatter, null, null]\n        }),\n        new Method({\n            name: 'lockAccount',\n            call: 'personal_lockAccount',\n            params: 1,\n            inputFormatter: [formatters.inputAddressFormatter]\n        }),\n        new Method({\n            name: 'importRawKey',\n            call: 'personal_importRawKey',\n            params: 2\n        }),\n        new Method({\n            name: 'sendTransaction',\n            call: 'personal_sendTransaction',\n            params: 2,\n            inputFormatter: [formatters.inputTransactionFormatter, null]\n        }),\n        new Method({\n            name: 'signTransaction',\n            call: 'personal_signTransaction',\n            params: 2,\n            inputFormatter: [formatters.inputTransactionFormatter, null]\n        }),\n        new Method({\n            name: 'sign',\n            call: 'personal_sign',\n            params: 3,\n            inputFormatter: [formatters.inputSignFormatter, formatters.inputAddressFormatter, null]\n        }),\n        new Method({\n            name: 'ecRecover',\n            call: 'personal_ecRecover',\n            params: 2,\n            inputFormatter: [formatters.inputSignFormatter, null]\n        })\n    ];\n    methods.forEach(function (method) {\n        method.attachToObject(_this);\n        method.setRequestManager(_this._requestManager);\n        method.defaultBlock = _this.defaultBlock;\n        method.defaultAccount = _this.defaultAccount;\n    });\n};\ncore.addProviders(Personal);\nmodule.exports = Personal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}