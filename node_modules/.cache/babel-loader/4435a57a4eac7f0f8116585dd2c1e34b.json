{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseTransaction = void 0;\nvar common_1 = __importStar(require(\"@ethereumjs/common\"));\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar types_1 = require(\"./types\");\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nvar BaseTransaction = /** @class */function () {\n  function BaseTransaction(txData, opts) {\n    this.cache = {\n      hash: undefined,\n      dataFee: undefined\n    };\n    /**\n     * List of tx type defining EIPs,\n     * e.g. 1559 (fee market) and 2930 (access lists)\n     * for FeeMarketEIP1559Transaction objects\n     */\n    this.activeCapabilities = [];\n    /**\n     * The default chain the tx falls back to if no Common\n     * is provided and if the chain can't be derived from\n     * a passed in chainId (only EIP-2718 typed txs) or\n     * EIP-155 signature (legacy txs).\n     *\n     * @hidden\n     */\n    this.DEFAULT_CHAIN = common_1.Chain.Mainnet;\n    /**\n     * The default HF if the tx type is active on that HF\n     * or the first greater HF where the tx is active.\n     *\n     * @hidden\n     */\n    this.DEFAULT_HARDFORK = common_1.Hardfork.Istanbul;\n    var nonce = txData.nonce,\n      gasLimit = txData.gasLimit,\n      to = txData.to,\n      value = txData.value,\n      data = txData.data,\n      v = txData.v,\n      r = txData.r,\n      s = txData.s,\n      type = txData.type;\n    this._type = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(type)).toNumber();\n    this.txOptions = opts;\n    var toB = (0, ethereumjs_util_1.toBuffer)(to === '' ? '0x' : to);\n    var vB = (0, ethereumjs_util_1.toBuffer)(v === '' ? '0x' : v);\n    var rB = (0, ethereumjs_util_1.toBuffer)(r === '' ? '0x' : r);\n    var sB = (0, ethereumjs_util_1.toBuffer)(s === '' ? '0x' : s);\n    this.nonce = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(nonce === '' ? '0x' : nonce));\n    this.gasLimit = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(gasLimit === '' ? '0x' : gasLimit));\n    this.to = toB.length > 0 ? new ethereumjs_util_1.Address(toB) : undefined;\n    this.value = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(value === '' ? '0x' : value));\n    this.data = (0, ethereumjs_util_1.toBuffer)(data === '' ? '0x' : data);\n    this.v = vB.length > 0 ? new ethereumjs_util_1.BN(vB) : undefined;\n    this.r = rB.length > 0 ? new ethereumjs_util_1.BN(rB) : undefined;\n    this.s = sB.length > 0 ? new ethereumjs_util_1.BN(sB) : undefined;\n    this._validateCannotExceedMaxInteger({\n      value: this.value,\n      r: this.r,\n      s: this.s\n    });\n    // geth limits gasLimit to 2^64-1\n    this._validateCannotExceedMaxInteger({\n      gasLimit: this.gasLimit\n    }, 64);\n    // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n    this._validateCannotExceedMaxInteger({\n      nonce: this.nonce\n    }, 64, true);\n  }\n  Object.defineProperty(BaseTransaction.prototype, \"transactionType\", {\n    /**\n     * Alias for {@link BaseTransaction.type}\n     *\n     * @deprecated Use `type` instead\n     */\n    get: function () {\n      return this.type;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BaseTransaction.prototype, \"type\", {\n    /**\n     * Returns the transaction type.\n     *\n     * Note: legacy txs will return tx type `0`.\n     */\n    get: function () {\n      return this._type;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Checks if a tx type defining capability is active\n   * on a tx, for example the EIP-1559 fee market mechanism\n   * or the EIP-2930 access list feature.\n   *\n   * Note that this is different from the tx type itself,\n   * so EIP-2930 access lists can very well be active\n   * on an EIP-1559 tx for example.\n   *\n   * This method can be useful for feature checks if the\n   * tx type is unknown (e.g. when instantiated with\n   * the tx factory).\n   *\n   * See `Capabilites` in the `types` module for a reference\n   * on all supported capabilities.\n   */\n  BaseTransaction.prototype.supports = function (capability) {\n    return this.activeCapabilities.includes(capability);\n  };\n  BaseTransaction.prototype.validate = function (stringError) {\n    if (stringError === void 0) {\n      stringError = false;\n    }\n    var errors = [];\n    if (this.getBaseFee().gt(this.gasLimit)) {\n      errors.push(\"gasLimit is too low. given \".concat(this.gasLimit, \", need at least \").concat(this.getBaseFee()));\n    }\n    if (this.isSigned() && !this.verifySignature()) {\n      errors.push('Invalid Signature');\n    }\n    return stringError ? errors : errors.length === 0;\n  };\n  /**\n   * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   */\n  BaseTransaction.prototype.getBaseFee = function () {\n    var fee = this.getDataFee().addn(this.common.param('gasPrices', 'tx'));\n    if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n      fee.iaddn(this.common.param('gasPrices', 'txCreation'));\n    }\n    return fee;\n  };\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  BaseTransaction.prototype.getDataFee = function () {\n    var txDataZero = this.common.param('gasPrices', 'txDataZero');\n    var txDataNonZero = this.common.param('gasPrices', 'txDataNonZero');\n    var cost = 0;\n    for (var i = 0; i < this.data.length; i++) {\n      this.data[i] === 0 ? cost += txDataZero : cost += txDataNonZero;\n    }\n    cost = new ethereumjs_util_1.BN(cost);\n    if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n      var dataLength = Math.ceil(this.data.length / 32);\n      var initCodeCost = new ethereumjs_util_1.BN(this.common.param('gasPrices', 'initCodeWordCost')).imuln(dataLength);\n      cost.iadd(initCodeCost);\n    }\n    return cost;\n  };\n  /**\n   * If the tx's `to` is to the creation address\n   */\n  BaseTransaction.prototype.toCreationAddress = function () {\n    return this.to === undefined || this.to.buf.length === 0;\n  };\n  BaseTransaction.prototype.isSigned = function () {\n    var _a = this,\n      v = _a.v,\n      r = _a.r,\n      s = _a.s;\n    if (this.type === 0) {\n      if (!v || !r || !s) {\n        return false;\n      } else {\n        return true;\n      }\n    } else {\n      if (v === undefined || !r || !s) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  };\n  /**\n   * Determines if the signature is valid\n   */\n  BaseTransaction.prototype.verifySignature = function () {\n    try {\n      // Main signature verification is done in `getSenderPublicKey()`\n      var publicKey = this.getSenderPublicKey();\n      return (0, ethereumjs_util_1.unpadBuffer)(publicKey).length !== 0;\n    } catch (e) {\n      return false;\n    }\n  };\n  /**\n   * Returns the sender's address\n   */\n  BaseTransaction.prototype.getSenderAddress = function () {\n    return new ethereumjs_util_1.Address((0, ethereumjs_util_1.publicToAddress)(this.getSenderPublicKey()));\n  };\n  /**\n   * Signs a transaction.\n   *\n   * Note that the signed tx is returned as a new object,\n   * use as follows:\n   * ```javascript\n   * const signedTx = tx.sign(privateKey)\n   * ```\n   */\n  BaseTransaction.prototype.sign = function (privateKey) {\n    if (privateKey.length !== 32) {\n      var msg = this._errorMsg('Private key must be 32 bytes in length.');\n      throw new Error(msg);\n    }\n    // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n    // and want to recreate a signature (where EIP155 should be applied)\n    // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n    // 2021-06-23\n    var hackApplied = false;\n    if (this.type === 0 && this.common.gteHardfork('spuriousDragon') && !this.supports(types_1.Capability.EIP155ReplayProtection)) {\n      this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n      hackApplied = true;\n    }\n    var msgHash = this.getMessageToSign(true);\n    var _a = (0, ethereumjs_util_1.ecsign)(msgHash, privateKey),\n      v = _a.v,\n      r = _a.r,\n      s = _a.s;\n    var tx = this._processSignature(v, r, s);\n    // Hack part 2\n    if (hackApplied) {\n      var index = this.activeCapabilities.indexOf(types_1.Capability.EIP155ReplayProtection);\n      if (index > -1) {\n        this.activeCapabilities.splice(index, 1);\n      }\n    }\n    return tx;\n  };\n  /**\n   * Does chain ID checks on common and returns a common\n   * to be used on instantiation\n   * @hidden\n   *\n   * @param common - {@link Common} instance from tx options\n   * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n   */\n  BaseTransaction.prototype._getCommon = function (common, chainId) {\n    var _a;\n    // Chain ID provided\n    if (chainId) {\n      var chainIdBN = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(chainId));\n      if (common) {\n        if (!common.chainIdBN().eq(chainIdBN)) {\n          var msg = this._errorMsg('The chain ID does not match the chain ID of Common');\n          throw new Error(msg);\n        }\n        // Common provided, chain ID does match\n        // -> Return provided Common\n        return common.copy();\n      } else {\n        if (common_1.default.isSupportedChainId(chainIdBN)) {\n          // No Common, chain ID supported by Common\n          // -> Instantiate Common with chain ID\n          return new common_1.default({\n            chain: chainIdBN,\n            hardfork: this.DEFAULT_HARDFORK\n          });\n        } else {\n          // No Common, chain ID not supported by Common\n          // -> Instantiate custom Common derived from DEFAULT_CHAIN\n          return common_1.default.forCustomChain(this.DEFAULT_CHAIN, {\n            name: 'custom-chain',\n            networkId: chainIdBN,\n            chainId: chainIdBN\n          }, this.DEFAULT_HARDFORK);\n        }\n      }\n    } else {\n      // No chain ID provided\n      // -> return Common provided or create new default Common\n      return (_a = common === null || common === void 0 ? void 0 : common.copy()) !== null && _a !== void 0 ? _a : new common_1.default({\n        chain: this.DEFAULT_CHAIN,\n        hardfork: this.DEFAULT_HARDFORK\n      });\n    }\n  };\n  /**\n   * Validates that an object with BN values cannot exceed the specified bit limit.\n   * @param values Object containing string keys and BN values\n   * @param bits Number of bits to check (64 or 256)\n   * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n   */\n  BaseTransaction.prototype._validateCannotExceedMaxInteger = function (values, bits, cannotEqual) {\n    var e_1, _a;\n    if (bits === void 0) {\n      bits = 256;\n    }\n    if (cannotEqual === void 0) {\n      cannotEqual = false;\n    }\n    try {\n      for (var _b = __values(Object.entries(values)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = __read(_c.value, 2),\n          key = _d[0],\n          value = _d[1];\n        switch (bits) {\n          case 64:\n            if (cannotEqual) {\n              if (value === null || value === void 0 ? void 0 : value.gte(ethereumjs_util_1.MAX_UINT64)) {\n                var msg = this._errorMsg(\"\".concat(key, \" cannot equal or exceed MAX_UINT64 (2^64-1), given \").concat(value));\n                throw new Error(msg);\n              }\n            } else {\n              if (value === null || value === void 0 ? void 0 : value.gt(ethereumjs_util_1.MAX_UINT64)) {\n                var msg = this._errorMsg(\"\".concat(key, \" cannot exceed MAX_UINT64 (2^64-1), given \").concat(value));\n                throw new Error(msg);\n              }\n            }\n            break;\n          case 256:\n            if (cannotEqual) {\n              if (value === null || value === void 0 ? void 0 : value.gte(ethereumjs_util_1.MAX_INTEGER)) {\n                var msg = this._errorMsg(\"\".concat(key, \" cannot equal or exceed MAX_INTEGER (2^256-1), given \").concat(value));\n                throw new Error(msg);\n              }\n            } else {\n              if (value === null || value === void 0 ? void 0 : value.gt(ethereumjs_util_1.MAX_INTEGER)) {\n                var msg = this._errorMsg(\"\".concat(key, \" cannot exceed MAX_INTEGER (2^256-1), given \").concat(value));\n                throw new Error(msg);\n              }\n            }\n            break;\n          default:\n            {\n              var msg = this._errorMsg('unimplemented bits value');\n              throw new Error(msg);\n            }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n  /**\n   * Returns the shared error postfix part for _error() method\n   * tx type implementations.\n   */\n  BaseTransaction.prototype._getSharedErrorPostfix = function () {\n    var hash = '';\n    try {\n      hash = this.isSigned() ? (0, ethereumjs_util_1.bufferToHex)(this.hash()) : 'not available (unsigned)';\n    } catch (e) {\n      hash = 'error';\n    }\n    var isSigned = '';\n    try {\n      isSigned = this.isSigned().toString();\n    } catch (e) {\n      hash = 'error';\n    }\n    var hf = '';\n    try {\n      hf = this.common.hardfork();\n    } catch (e) {\n      hf = 'error';\n    }\n    var postfix = \"tx type=\".concat(this.type, \" hash=\").concat(hash, \" nonce=\").concat(this.nonce, \" value=\").concat(this.value, \" \");\n    postfix += \"signed=\".concat(isSigned, \" hf=\").concat(hf);\n    return postfix;\n  };\n  return BaseTransaction;\n}();\nexports.BaseTransaction = BaseTransaction;","map":{"version":3,"mappings":"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","names":["common_1","__importStar","require","ethereumjs_util_1","types_1","BaseTransaction","txData","opts","cache","hash","undefined","dataFee","activeCapabilities","DEFAULT_CHAIN","Chain","Mainnet","DEFAULT_HARDFORK","Hardfork","Istanbul","nonce","gasLimit","to","value","data","v","r","s","type","_type","BN","toBuffer","toNumber","txOptions","toB","vB","rB","sB","length","Address","_validateCannotExceedMaxInteger","Object","defineProperty","prototype","supports","capability","includes","validate","stringError","errors","getBaseFee","gt","push","concat","isSigned","verifySignature","fee","getDataFee","addn","common","param","gteHardfork","toCreationAddress","iaddn","txDataZero","txDataNonZero","cost","i","isActivatedEIP","dataLength","Math","ceil","initCodeCost","imuln","iadd","buf","_a","publicKey","getSenderPublicKey","unpadBuffer","e","getSenderAddress","publicToAddress","sign","privateKey","msg","_errorMsg","Error","hackApplied","Capability","EIP155ReplayProtection","msgHash","getMessageToSign","ecsign","tx","_processSignature","index","indexOf","splice","_getCommon","chainId","chainIdBN","eq","copy","default","isSupportedChainId","chain","hardfork","forCustomChain","name","networkId","values","bits","cannotEqual","_b","__values","entries","_c","next","done","_d","__read","key","gte","MAX_UINT64","MAX_INTEGER","_getSharedErrorPostfix","bufferToHex","toString","hf","postfix","exports"],"ignoreList":[],"sourceRoot":"","sources":["../src/baseTransaction.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}