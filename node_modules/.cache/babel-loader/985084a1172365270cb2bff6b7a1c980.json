{"ast":null,"code":"var _jsxFileName = \"/Users/tanvisangale/Documents/Project2/Blockchain-Healthcare/src/Healthcare.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nconst Healthcare = () => {\n  const [web3, setWeb3] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [isOwner, setIsOwner] = useState(false);\n  const [patientID, setPatientID] = useState(\"\");\n  const [diagnosis, setDiagnosis] = useState(\"\");\n  const [treatment, setTreatment] = useState(\"\");\n  const [patientRecords, setPatientRecords] = useState([]);\n  const [providerAddress, setProviderAddress] = useState(\"\");\n  const contractAddress = \"0x54c0033AAeae4d01c9f3d6F9f28c267574641ccA\";\n  const contractABI = [{\n    inputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\"\n  }, {\n    constant: true,\n    inputs: [],\n    name: \"getOwner\",\n    outputs: [{\n      name: \"\",\n      type: \"address\"\n    }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }, {\n    constant: false,\n    inputs: [{\n      name: \"provider\",\n      type: \"address\"\n    }],\n    name: \"authorizeProvider\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }, {\n    constant: false,\n    inputs: [{\n      name: \"patientID\",\n      type: \"uint256\"\n    }, {\n      name: \"patientName\",\n      type: \"string\"\n    }, {\n      name: \"diagnosis\",\n      type: \"string\"\n    }, {\n      name: \"treatment\",\n      type: \"string\"\n    }],\n    name: \"addRecord\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }, {\n    constant: true,\n    inputs: [{\n      name: \"patientID\",\n      type: \"uint256\"\n    }],\n    name: \"getPatientRecords\",\n    outputs: [{\n      components: [{\n        name: \"recordID\",\n        type: \"uint256\"\n      }, {\n        name: \"patientName\",\n        type: \"string\"\n      }, {\n        name: \"diagnosis\",\n        type: \"string\"\n      }, {\n        name: \"treatment\",\n        type: \"string\"\n      }, {\n        name: \"timestamp\",\n        type: \"uint256\"\n      }],\n      name: \"\",\n      type: \"tuple[]\"\n    }],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }];\n  useEffect(() => {\n    const connectWallet = async () => {\n      try {\n        // Check if MetaMask is installed\n        if (window.ethereum) {\n          const web3Instance = new Web3(Web3.givenProvider || \"ws://localhost:7545\");\n          setWeb3(web3Instance);\n\n          // Request account access if needed\n          const accounts = await window.ethereum.request({\n            method: \"eth_requestAccounts\"\n          });\n          setAccount(accounts[0]);\n          const contractInstance = new web3Instance.eth.Contract(contractABI, contractAddress);\n          setContract(contractInstance);\n          const ownerAddress = await contractInstance.methods.getOwner().call();\n          setIsOwner(accounts[0].toLowerCase() === ownerAddress.toLowerCase());\n        } else {\n          console.error(\"MetaMask is not installed!\");\n        }\n      } catch (error) {\n        console.error(\"Error connecting to wallet:\", error);\n      }\n    };\n    connectWallet();\n  }, []);\n  const fetchPatientRecords = async () => {\n    try {\n      const records = await contract.methods.getPatientRecords(patientID).call();\n      setPatientRecords(records);\n    } catch (error) {\n      console.error(\"Error fetching patient records:\", error);\n    }\n  };\n  const addRecord = async () => {\n    try {\n      await contract.methods.addRecord(patientID, \"Alice\", diagnosis, treatment).send({\n        from: account\n      });\n      fetchPatientRecords();\n      alert(`Record added successfully`);\n    } catch (error) {\n      console.error(\"Error adding record:\", error);\n    }\n  };\n  const authorizeProvider = async () => {\n    if (isOwner) {\n      try {\n        await contract.methods.authorizeProvider(account).send({\n          from: account\n        });\n        alert(`Account ${account} authorized successfully`);\n      } catch (error) {\n        console.error(\"Error authorizing provider:\", error);\n      }\n    } else {\n      alert(\"Only the contract owner can authorize providers.\");\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, \"HealthCare Application\"), account && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"account-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 19\n    }\n  }, \"Connected Account: \", account), isOwner && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"owner-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }, \"You are the contract owner\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, \"Fetch Patient Records\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-field\",\n    type: \"text\",\n    placeholder: \"Enter Patient ID\",\n    value: patientID,\n    onChange: e => setPatientID(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"action-button\",\n    onClick: fetchPatientRecords,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, \"Fetch Records\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, \"Add Patient Record\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-field\",\n    type: \"number\",\n    placeholder: \"Patient ID\",\n    onChange: e => setPatientID(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-field\",\n    type: \"text\",\n    placeholder: \"Diagnosis\",\n    value: diagnosis,\n    onChange: e => setDiagnosis(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-field\",\n    type: \"text\",\n    placeholder: \"Treatment\",\n    value: treatment,\n    onChange: e => setTreatment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"action-button\",\n    onClick: addRecord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, \"Add Record\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, \"Authorize HealthCare Provider\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input-field\",\n    type: \"text\",\n    placeholder: \"Provider Address\",\n    value: providerAddress,\n    onChange: e => setProviderAddress(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"action-button\",\n    onClick: authorizeProvider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, \"Authorize Provider\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"records-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }\n  }, \"Patient Records\"), patientRecords.map((record, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, \"Record ID: \", record.recordID), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }, \"Diagnosis: \", record.diagnosis), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, \"Treatment: \", record.treatment), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }\n  }, \"Timestamp: \", new Date(record.timestamp * 1000).toLocaleString())))));\n};\nexport default Healthcare;","map":{"version":3,"names":["React","useState","useEffect","Web3","Healthcare","web3","setWeb3","contract","setContract","account","setAccount","isOwner","setIsOwner","patientID","setPatientID","diagnosis","setDiagnosis","treatment","setTreatment","patientRecords","setPatientRecords","providerAddress","setProviderAddress","contractAddress","contractABI","inputs","payable","stateMutability","type","constant","name","outputs","components","connectWallet","window","ethereum","web3Instance","givenProvider","accounts","request","method","contractInstance","eth","Contract","ownerAddress","methods","getOwner","call","toLowerCase","console","error","fetchPatientRecords","records","getPatientRecords","addRecord","send","from","alert","authorizeProvider","e","target","value","map","record","index","recordID","Date","timestamp","toLocaleString"],"sources":["/Users/tanvisangale/Documents/Project2/Blockchain-Healthcare/src/Healthcare.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Web3 from \"web3\";\r\n\r\nconst Healthcare = () => {\r\n  const [web3, setWeb3] = useState(null);\r\n  const [contract, setContract] = useState(null);\r\n  const [account, setAccount] = useState(null);\r\n  const [isOwner, setIsOwner] = useState(false);\r\n  const [patientID, setPatientID] = useState(\"\");\r\n  const [diagnosis, setDiagnosis] = useState(\"\");\r\n  const [treatment, setTreatment] = useState(\"\");\r\n  const [patientRecords, setPatientRecords] = useState([]);\r\n  const [providerAddress, setProviderAddress] = useState(\"\");\r\n  const contractAddress = \"0x54c0033AAeae4d01c9f3d6F9f28c267574641ccA\";\r\n  const contractABI = [\r\n    {\r\n      inputs: [],\r\n      payable: false,\r\n      stateMutability: \"nonpayable\",\r\n      type: \"constructor\",\r\n    },\r\n    {\r\n      constant: true,\r\n      inputs: [],\r\n      name: \"getOwner\",\r\n      outputs: [\r\n        {\r\n          name: \"\",\r\n          type: \"address\",\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: \"view\",\r\n      type: \"function\",\r\n    },\r\n    {\r\n      constant: false,\r\n      inputs: [\r\n        {\r\n          name: \"provider\",\r\n          type: \"address\",\r\n        },\r\n      ],\r\n      name: \"authorizeProvider\",\r\n      outputs: [],\r\n      payable: false,\r\n      stateMutability: \"nonpayable\",\r\n      type: \"function\",\r\n    },\r\n    {\r\n      constant: false,\r\n      inputs: [\r\n        {\r\n          name: \"patientID\",\r\n          type: \"uint256\",\r\n        },\r\n        {\r\n          name: \"patientName\",\r\n          type: \"string\",\r\n        },\r\n        {\r\n          name: \"diagnosis\",\r\n          type: \"string\",\r\n        },\r\n        {\r\n          name: \"treatment\",\r\n          type: \"string\",\r\n        },\r\n      ],\r\n      name: \"addRecord\",\r\n      outputs: [],\r\n      payable: false,\r\n      stateMutability: \"nonpayable\",\r\n      type: \"function\",\r\n    },\r\n    {\r\n      constant: true,\r\n      inputs: [\r\n        {\r\n          name: \"patientID\",\r\n          type: \"uint256\",\r\n        },\r\n      ],\r\n      name: \"getPatientRecords\",\r\n      outputs: [\r\n        {\r\n          components: [\r\n            {\r\n              name: \"recordID\",\r\n              type: \"uint256\",\r\n            },\r\n            {\r\n              name: \"patientName\",\r\n              type: \"string\",\r\n            },\r\n            {\r\n              name: \"diagnosis\",\r\n              type: \"string\",\r\n            },\r\n            {\r\n              name: \"treatment\",\r\n              type: \"string\",\r\n            },\r\n            {\r\n              name: \"timestamp\",\r\n              type: \"uint256\",\r\n            },\r\n          ],\r\n          name: \"\",\r\n          type: \"tuple[]\",\r\n        },\r\n      ],\r\n      payable: false,\r\n      stateMutability: \"view\",\r\n      type: \"function\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const connectWallet = async () => {\r\n      try {\r\n        // Check if MetaMask is installed\r\n        if (window.ethereum) {\r\n          const web3Instance = new Web3(\r\n            Web3.givenProvider || \"ws://localhost:7545\"\r\n          );\r\n          setWeb3(web3Instance);\r\n\r\n          // Request account access if needed\r\n          const accounts = await window.ethereum.request({\r\n            method: \"eth_requestAccounts\",\r\n          });\r\n          setAccount(accounts[0]);\r\n\r\n          const contractInstance = new web3Instance.eth.Contract(\r\n            contractABI,\r\n            contractAddress\r\n          );\r\n          setContract(contractInstance);\r\n\r\n          const ownerAddress = await contractInstance.methods.getOwner().call();\r\n          setIsOwner(accounts[0].toLowerCase() === ownerAddress.toLowerCase());\r\n        } else {\r\n          console.error(\"MetaMask is not installed!\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error connecting to wallet:\", error);\r\n      }\r\n    };\r\n    connectWallet();\r\n  }, []);\r\n\r\n  const fetchPatientRecords = async () => {\r\n    try {\r\n      const records = await contract.methods\r\n        .getPatientRecords(patientID)\r\n        .call();\r\n      setPatientRecords(records);\r\n    } catch (error) {\r\n      console.error(\"Error fetching patient records:\", error);\r\n    }\r\n  };\r\n\r\n  const addRecord = async () => {\r\n    try {\r\n      await contract.methods\r\n        .addRecord(patientID, \"Alice\", diagnosis, treatment)\r\n        .send({ from: account });\r\n      fetchPatientRecords();\r\n      alert(`Record added successfully`);\r\n    } catch (error) {\r\n      console.error(\"Error adding record:\", error);\r\n    }\r\n  };\r\n\r\n  const authorizeProvider = async () => {\r\n    if (isOwner) {\r\n      try {\r\n        await contract.methods\r\n          .authorizeProvider(account)\r\n          .send({ from: account });\r\n        alert(`Account ${account} authorized successfully`);\r\n      } catch (error) {\r\n        console.error(\"Error authorizing provider:\", error);\r\n      }\r\n    } else {\r\n      alert(\"Only the contract owner can authorize providers.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">HealthCare Application</h1>\r\n      {account && <p className=\"account-info\">Connected Account: {account}</p>}\r\n      {isOwner && <p className=\"owner-info\">You are the contract owner</p>}\r\n\r\n      <div className=\"form-section\">\r\n        <h2>Fetch Patient Records</h2>\r\n        <input\r\n          className=\"input-field\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Patient ID\"\r\n          value={patientID}\r\n          onChange={(e) => setPatientID(e.target.value)}\r\n        />\r\n        <button className=\"action-button\" onClick={fetchPatientRecords}>\r\n          Fetch Records\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"form-section\">\r\n        <h2>Add Patient Record</h2>\r\n        <input\r\n          className=\"input-field\"\r\n          type=\"number\"\r\n          placeholder=\"Patient ID\"\r\n          onChange={(e) => setPatientID(e.target.value)}\r\n        />\r\n        <input\r\n          className=\"input-field\"\r\n          type=\"text\"\r\n          placeholder=\"Diagnosis\"\r\n          value={diagnosis}\r\n          onChange={(e) => setDiagnosis(e.target.value)}\r\n        />\r\n        <input\r\n          className=\"input-field\"\r\n          type=\"text\"\r\n          placeholder=\"Treatment\"\r\n          value={treatment}\r\n          onChange={(e) => setTreatment(e.target.value)}\r\n        />\r\n        <button className=\"action-button\" onClick={addRecord}>\r\n          Add Record\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"form-section\">\r\n        <h2>Authorize HealthCare Provider</h2>\r\n        <input\r\n          className=\"input-field\"\r\n          type=\"text\"\r\n          placeholder=\"Provider Address\"\r\n          value={providerAddress}\r\n          onChange={(e) => setProviderAddress(e.target.value)}\r\n        />\r\n        <button className=\"action-button\" onClick={authorizeProvider}>\r\n          Authorize Provider\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"records-section\">\r\n        <h2>Patient Records</h2>\r\n        {patientRecords.map((record, index) => (\r\n          <div key={index}>\r\n            <p>Record ID: {record.recordID}</p>\r\n            <p>Diagnosis: {record.diagnosis}</p>\r\n            <p>Treatment: {record.treatment}</p>\r\n            <p>\r\n              Timestamp: {new Date(record.timestamp * 1000).toLocaleString()}\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Healthcare;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,MAAM;AAEvB,MAAMC,UAAU,GAAG,MAAM;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACoB,eAAe,EAAEC,kBAAkB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMsB,eAAe,GAAG,4CAA4C;EACpE,MAAMC,WAAW,GAAG,CAClB;IACEC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE,KAAK;IACdC,eAAe,EAAE,YAAY;IAC7BC,IAAI,EAAE;EACR,CAAC,EACD;IACEC,QAAQ,EAAE,IAAI;IACdJ,MAAM,EAAE,EAAE;IACVK,IAAI,EAAE,UAAU;IAChBC,OAAO,EAAE,CACP;MACED,IAAI,EAAE,EAAE;MACRF,IAAI,EAAE;IACR,CAAC,CACF;IACDF,OAAO,EAAE,KAAK;IACdC,eAAe,EAAE,MAAM;IACvBC,IAAI,EAAE;EACR,CAAC,EACD;IACEC,QAAQ,EAAE,KAAK;IACfJ,MAAM,EAAE,CACN;MACEK,IAAI,EAAE,UAAU;MAChBF,IAAI,EAAE;IACR,CAAC,CACF;IACDE,IAAI,EAAE,mBAAmB;IACzBC,OAAO,EAAE,EAAE;IACXL,OAAO,EAAE,KAAK;IACdC,eAAe,EAAE,YAAY;IAC7BC,IAAI,EAAE;EACR,CAAC,EACD;IACEC,QAAQ,EAAE,KAAK;IACfJ,MAAM,EAAE,CACN;MACEK,IAAI,EAAE,WAAW;MACjBF,IAAI,EAAE;IACR,CAAC,EACD;MACEE,IAAI,EAAE,aAAa;MACnBF,IAAI,EAAE;IACR,CAAC,EACD;MACEE,IAAI,EAAE,WAAW;MACjBF,IAAI,EAAE;IACR,CAAC,EACD;MACEE,IAAI,EAAE,WAAW;MACjBF,IAAI,EAAE;IACR,CAAC,CACF;IACDE,IAAI,EAAE,WAAW;IACjBC,OAAO,EAAE,EAAE;IACXL,OAAO,EAAE,KAAK;IACdC,eAAe,EAAE,YAAY;IAC7BC,IAAI,EAAE;EACR,CAAC,EACD;IACEC,QAAQ,EAAE,IAAI;IACdJ,MAAM,EAAE,CACN;MACEK,IAAI,EAAE,WAAW;MACjBF,IAAI,EAAE;IACR,CAAC,CACF;IACDE,IAAI,EAAE,mBAAmB;IACzBC,OAAO,EAAE,CACP;MACEC,UAAU,EAAE,CACV;QACEF,IAAI,EAAE,UAAU;QAChBF,IAAI,EAAE;MACR,CAAC,EACD;QACEE,IAAI,EAAE,aAAa;QACnBF,IAAI,EAAE;MACR,CAAC,EACD;QACEE,IAAI,EAAE,WAAW;QACjBF,IAAI,EAAE;MACR,CAAC,EACD;QACEE,IAAI,EAAE,WAAW;QACjBF,IAAI,EAAE;MACR,CAAC,EACD;QACEE,IAAI,EAAE,WAAW;QACjBF,IAAI,EAAE;MACR,CAAC,CACF;MACDE,IAAI,EAAE,EAAE;MACRF,IAAI,EAAE;IACR,CAAC,CACF;IACDF,OAAO,EAAE,KAAK;IACdC,eAAe,EAAE,MAAM;IACvBC,IAAI,EAAE;EACR,CAAC,CACF;EAED1B,SAAS,CAAC,MAAM;IACd,MAAM+B,aAAa,GAAG,YAAY;MAChC,IAAI;QACF;QACA,IAAIC,MAAM,CAACC,QAAQ,EAAE;UACnB,MAAMC,YAAY,GAAG,IAAIjC,IAAI,CAC3BA,IAAI,CAACkC,aAAa,IAAI,qBAAqB,CAC5C;UACD/B,OAAO,CAAC8B,YAAY,CAAC;;UAErB;UACA,MAAME,QAAQ,GAAG,MAAMJ,MAAM,CAACC,QAAQ,CAACI,OAAO,CAAC;YAC7CC,MAAM,EAAE;UACV,CAAC,CAAC;UACF9B,UAAU,CAAC4B,QAAQ,CAAC,CAAC,CAAC,CAAC;UAEvB,MAAMG,gBAAgB,GAAG,IAAIL,YAAY,CAACM,GAAG,CAACC,QAAQ,CACpDnB,WAAW,EACXD,eAAe,CAChB;UACDf,WAAW,CAACiC,gBAAgB,CAAC;UAE7B,MAAMG,YAAY,GAAG,MAAMH,gBAAgB,CAACI,OAAO,CAACC,QAAQ,EAAE,CAACC,IAAI,EAAE;UACrEnC,UAAU,CAAC0B,QAAQ,CAAC,CAAC,CAAC,CAACU,WAAW,EAAE,KAAKJ,YAAY,CAACI,WAAW,EAAE,CAAC;QACtE,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAC;QAC7C;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACDjB,aAAa,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMkB,mBAAmB,GAAG,YAAY;IACtC,IAAI;MACF,MAAMC,OAAO,GAAG,MAAM7C,QAAQ,CAACsC,OAAO,CACnCQ,iBAAiB,CAACxC,SAAS,CAAC,CAC5BkC,IAAI,EAAE;MACT3B,iBAAiB,CAACgC,OAAO,CAAC;IAC5B,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EAED,MAAMI,SAAS,GAAG,YAAY;IAC5B,IAAI;MACF,MAAM/C,QAAQ,CAACsC,OAAO,CACnBS,SAAS,CAACzC,SAAS,EAAE,OAAO,EAAEE,SAAS,EAAEE,SAAS,CAAC,CACnDsC,IAAI,CAAC;QAAEC,IAAI,EAAE/C;MAAQ,CAAC,CAAC;MAC1B0C,mBAAmB,EAAE;MACrBM,KAAK,CAAE,2BAA0B,CAAC;IACpC,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMQ,iBAAiB,GAAG,YAAY;IACpC,IAAI/C,OAAO,EAAE;MACX,IAAI;QACF,MAAMJ,QAAQ,CAACsC,OAAO,CACnBa,iBAAiB,CAACjD,OAAO,CAAC,CAC1B8C,IAAI,CAAC;UAAEC,IAAI,EAAE/C;QAAQ,CAAC,CAAC;QAC1BgD,KAAK,CAAE,WAAUhD,OAAQ,0BAAyB,CAAC;MACrD,CAAC,CAAC,OAAOyC,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC,MAAM;MACLO,KAAK,CAAC,kDAAkD,CAAC;IAC3D;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACxB;IAAI,SAAS,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,wBAAsB,CAAK,EAChDhD,OAAO,iBAAI;IAAG,SAAS,EAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,qBAAmB,EAACA,OAAO,CAAK,EACvEE,OAAO,iBAAI;IAAG,SAAS,EAAC,YAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,4BAA0B,CAAI,eAEpE;IAAK,SAAS,EAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC3B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,uBAAqB,CAAK,eAC9B;IACE,SAAS,EAAC,aAAa;IACvB,IAAI,EAAC,MAAM;IACX,WAAW,EAAC,kBAAkB;IAC9B,KAAK,EAAEE,SAAU;IACjB,QAAQ,EAAG8C,CAAC,IAAK7C,YAAY,CAAC6C,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC9C,eACF;IAAQ,SAAS,EAAC,eAAe;IAAC,OAAO,EAAEV,mBAAoB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,eAEhE,CAAS,CACL,eAEN;IAAK,SAAS,EAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC3B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,oBAAkB,CAAK,eAC3B;IACE,SAAS,EAAC,aAAa;IACvB,IAAI,EAAC,QAAQ;IACb,WAAW,EAAC,YAAY;IACxB,QAAQ,EAAGQ,CAAC,IAAK7C,YAAY,CAAC6C,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC9C,eACF;IACE,SAAS,EAAC,aAAa;IACvB,IAAI,EAAC,MAAM;IACX,WAAW,EAAC,WAAW;IACvB,KAAK,EAAE9C,SAAU;IACjB,QAAQ,EAAG4C,CAAC,IAAK3C,YAAY,CAAC2C,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC9C,eACF;IACE,SAAS,EAAC,aAAa;IACvB,IAAI,EAAC,MAAM;IACX,WAAW,EAAC,WAAW;IACvB,KAAK,EAAE5C,SAAU;IACjB,QAAQ,EAAG0C,CAAC,IAAKzC,YAAY,CAACyC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC9C,eACF;IAAQ,SAAS,EAAC,eAAe;IAAC,OAAO,EAAEP,SAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,YAEtD,CAAS,CACL,eAEN;IAAK,SAAS,EAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC3B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,+BAA6B,CAAK,eACtC;IACE,SAAS,EAAC,aAAa;IACvB,IAAI,EAAC,MAAM;IACX,WAAW,EAAC,kBAAkB;IAC9B,KAAK,EAAEjC,eAAgB;IACvB,QAAQ,EAAGsC,CAAC,IAAKrC,kBAAkB,CAACqC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACpD,eACF;IAAQ,SAAS,EAAC,eAAe;IAAC,OAAO,EAAEH,iBAAkB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAC,oBAE9D,CAAS,CACL,eAEN;IAAK,SAAS,EAAC,iBAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,iBAAe,CAAK,EACvBvC,cAAc,CAAC2C,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAChC;IAAK,GAAG,EAAEA,KAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAG,aAAW,EAACD,MAAM,CAACE,QAAQ,CAAK,eACnC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAG,aAAW,EAACF,MAAM,CAAChD,SAAS,CAAK,eACpC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAG,aAAW,EAACgD,MAAM,CAAC9C,SAAS,CAAK,eACpC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAG,aACU,EAAC,IAAIiD,IAAI,CAACH,MAAM,CAACI,SAAS,GAAG,IAAI,CAAC,CAACC,cAAc,EAAE,CAC5D,CAEP,CAAC,CACE,CACF;AAEV,CAAC;AAED,eAAehE,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}