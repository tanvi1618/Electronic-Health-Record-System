{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shake256 = exports.shake128 = exports.keccak_512 = exports.keccak_384 = exports.keccak_256 = exports.keccak_224 = exports.sha3_512 = exports.sha3_384 = exports.sha3_256 = exports.sha3_224 = exports.Keccak = void 0;\nexports.keccakP = keccakP;\nconst _assert_js_1 = require(\"./_assert.js\");\nconst _u64_js_1 = require(\"./_u64.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// SHA3 (keccak) is based on a new design: basically, the internal state is bigger than output size.\n// It's called a sponge function.\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */BigInt(0);\nconst _1n = /* @__PURE__ */BigInt(1);\nconst _2n = /* @__PURE__ */BigInt(2);\nconst _7n = /* @__PURE__ */BigInt(7);\nconst _256n = /* @__PURE__ */BigInt(256);\nconst _0x71n = /* @__PURE__ */BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((round + 1) * (round + 2) / 2 % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = (R << _1n ^ (R >> _7n) * _0x71n) % _256n;\n    if (R & _2n) t ^= _1n << (_1n << /* @__PURE__ */BigInt(j)) - _1n;\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */(0, _u64_js_1.split)(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => s > 32 ? (0, _u64_js_1.rotlBH)(h, l, s) : (0, _u64_js_1.rotlSH)(h, l, s);\nconst rotlL = (h, l, s) => s > 32 ? (0, _u64_js_1.rotlBL)(h, l, s) : (0, _u64_js_1.rotlSL)(h, l, s);\n// Same as keccakf1600, but allows to skip some rounds\nfunction keccakP(s) {\n  let rounds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 24;\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\nclass Keccak extends utils_js_1.Hash {\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(blockLen, suffix, outputLen) {\n    let enableXOF = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    let rounds = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 24;\n    super();\n    this.blockLen = blockLen;\n    this.suffix = suffix;\n    this.outputLen = outputLen;\n    this.enableXOF = enableXOF;\n    this.rounds = rounds;\n    this.pos = 0;\n    this.posOut = 0;\n    this.finished = false;\n    this.destroyed = false;\n    // Can be passed from user as dkLen\n    (0, _assert_js_1.number)(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200) throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = (0, utils_js_1.u32)(this.state);\n  }\n  keccak() {\n    if (!utils_js_1.isLE) (0, utils_js_1.byteSwap32)(this.state32);\n    keccakP(this.state32, this.rounds);\n    if (!utils_js_1.isLE) (0, utils_js_1.byteSwap32)(this.state32);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data) {\n    (0, _assert_js_1.exists)(this);\n    const {\n      blockLen,\n      state\n    } = this;\n    data = (0, utils_js_1.toBytes)(data);\n    const len = data.length;\n    for (let pos = 0; pos < len;) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const {\n      state,\n      suffix,\n      pos,\n      blockLen\n    } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  writeInto(out) {\n    (0, _assert_js_1.exists)(this, false);\n    (0, _assert_js_1.bytes)(out);\n    this.finish();\n    const bufferOut = this.state;\n    const {\n      blockLen\n    } = this;\n    for (let pos = 0, len = out.length; pos < len;) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out) {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes) {\n    (0, _assert_js_1.number)(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out) {\n    (0, _assert_js_1.output)(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to) {\n    const {\n      blockLen,\n      suffix,\n      outputLen,\n      rounds,\n      enableXOF\n    } = this;\n    to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\nexports.Keccak = Keccak;\nconst gen = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapConstructor)(() => new Keccak(blockLen, suffix, outputLen));\nexports.sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexports.sha3_256 = gen(0x06, 136, 256 / 8);\nexports.sha3_384 = gen(0x06, 104, 384 / 8);\nexports.sha3_512 = gen(0x06, 72, 512 / 8);\nexports.keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexports.keccak_256 = gen(0x01, 136, 256 / 8);\nexports.keccak_384 = gen(0x01, 104, 384 / 8);\nexports.keccak_512 = gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => (0, utils_js_1.wrapXOFConstructorWithOpts)(function () {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true);\n});\nexports.shake128 = genShake(0x1f, 168, 128 / 8);\nexports.shake256 = genShake(0x1f, 136, 256 / 8);","map":{"version":3,"mappings":"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","names":["exports","keccakP","_assert_js_1","require","_u64_js_1","utils_js_1","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","_0n","BigInt","_1n","_2n","_7n","_256n","_0x71n","round","R","x","y","push","t","j","SHA3_IOTA_H","SHA3_IOTA_L","split","rotlH","h","l","s","rotlBH","rotlSH","rotlL","rotlBL","rotlSL","rounds","B","Uint32Array","idx1","idx0","B0","B1","Th","Tl","curH","curL","shift","PI","fill","Keccak","Hash","constructor","blockLen","suffix","outputLen","enableXOF","pos","posOut","finished","destroyed","number","Error","state","Uint8Array","state32","u32","keccak","isLE","byteSwap32","update","data","exists","toBytes","len","length","take","Math","min","i","finish","writeInto","out","bytes","bufferOut","set","subarray","xofInto","xof","digestInto","output","destroy","digest","_cloneInto","to","gen","wrapConstructor","sha3_224","sha3_256","sha3_384","sha3_512","keccak_224","keccak_256","keccak_384","keccak_512","genShake","wrapXOFConstructorWithOpts","opts","dkLen","undefined","shake128","shake256"],"ignoreList":[],"sourceRoot":"","sources":["src/sha3.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}